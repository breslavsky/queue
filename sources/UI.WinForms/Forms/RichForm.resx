<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loadingBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKgAqAMQYADU1NaysrH19fQQEBNfX115eXoGBgQgICAsLC6GhoQkJCQ0NDRYWFhAQEAcHBz8/
        P39/fx8fHwMDAwEBAQ8PDxsbG0ZGRgAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBF
        Mi4wAwEAAAAh/wtYTVAgRGF0YVhNUDw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6
        cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9
        IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAg
        ICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1z
        eW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6
        Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29t
        L3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODEx
        OEE2REMwRDEyOTYzNDFCRSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpDNEE0Q0ZGQzkxREQxMUUx
        QkIzMjlEMjUwMjJGNTlCMiIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpDNEE0Q0ZGQjkxREQxMUUx
        QkIzMjlEMjUwMjJGNTlCMiIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2lu
        dG9zaCI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjAzODAxMTc0
        MDcyMDY4MTE4QTZEQzBEMTI5NjM0MUJFIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjAzODAxMTc0
        MDcyMDY4MTE4QTZEQzBEMTI5NjM0MUJFIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwv
        eDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Af/+/fz7+vn49/b19PPy8fDv7u3s6+rp6Ofm5eTj
        4uHg397d3Nva2djX1tXU09LR0M/OzczLysnIx8bFxMPCwcC/vr28u7q5uLe2tbSzsrGwr66trKuqqain
        pqWko6KhoJ+enZybmpmYl5aVlJOSkZCPjo2Mi4qJiIeGhYSDgoGAf359fHt6eXh3dnV0c3JxcG9ubWxr
        amloZ2ZlZGNiYWBfXl1cW1pZWFdWVVRTUlFQT05NTEtKSUhHRkVEQ0JBQD8+PTw7Ojk4NzY1NDMyMTAv
        Li0sKyopKCcmJSQjIiEgHx4dHBsaGRgXFhUUExIREA8ODQwLCgkIBwYFBAMCAQAAIfkEBQcAGAAsAAAA
        ACoAKgAABWkgdI1kaZ5oWopq675wLM90bd94ru987//AoHBILBqPyORsALBYAIMS0wmVNp9R2ZVa2j67
        Tq4sHFaQyE7zCG1Rw9gl+Bk98wLA4TvJvrxWSVNYVlRZSoaHiImKi4yNjo+QkZKTQSxJECEAIfkEBQcA
        GAAsAAAAACoAKgAABU7gg41kaZ5oWopq675wLM90bd94ru987//AoHBILBqPyOTsUBAICodj0/k8UqkN
        49UZTQ1U39jUWTgyyV2les1uu9/wuHxOr9vvdFbyEQIAIfkEBQcAGAAsAAAAACoAKgAABU5ghI1kaZ5o
        Wopq675wLM90bd94ru987//AoHBILBqPyOQMYQgEDIhj0/k8UqkM49V5UXVTX9jUaTgyyVGles1uu9/w
        uHxOr9vvdVYyEgIAIfkEBQcAGAAsAAAAACoAKgAABU4ghY1kaZ5oWopq675wLM90bd94ru987//AoHBI
        LBqPyORskSAQEotj0/k8UqkV49UZTQ1U39jUmTgyyV2les1uu9/wuHxOr9vvdFaSEgIAIfkEBQcAGAAs
        AAAAACoAKgAABWWgg41kaZ5oWopq675wLM90bd94ru987//AoHBILBqPyOQMYQgEDIjSoSAQFA69pvNZ
        olatve2WQfp+Gzyx81I2C9gpOEzrNHTNhR6zHiVNq1dKgoOEhYaHiImKi4yNjo+ELEkOIQAh+QQFBwAY
        ACwAAAAAKgAqAAAFZaCEjWRpnmhaimrrvnAsz3Rt33iu73zv/8CgcEgsGo/I5OxQEAgKhxLCEAgYEL2m
        81miVq297bZB+n4ZPLEzOjJXsamBTOssdM2GHrPOHk2rV0qCg4SFhoeIiYqLjI2Oj4QsSRIhACH5BAUH
        ABgALAAAAAAqACoAAAVl4ISNZGmeaFqKauu+cCzPdG3feK7vfO//wKBwSCwaj8jkbACwWACD0iJBICQW
        vabzWaJWrb3tVkH6fis8sfNSNhPYKThM6wR0zYkesx4lTatXSoKDhIWGh4iJiouMjY6PhCxJEyEAIfkE
        BQcAGAAsAAAAACoAKgAABWPghY1kaZ5oWopq675wLM90bd94ru987//AoHBILBqPyGQPYQgEDIjSoSAQ
        FA69pvNZolatve2WQfp+G7gBSeyMjsxV7E7rNHTNhaUWKvVelYCBgoOEhYaHiImKi4yNQyxJFyEAIfkE
        BQcAGAAsDgASABUABgAABTHgJV5HIQjFMV6IEQQGsl7mia7uC1/KaNuNkU7HWP1Oq+FrVjsVcEPDrORU
        jVqv2CUEACH5BAUHABgALA4AEgAVAAYAAAUxICZiA2BZwDBiS0IQybJi5omu7gvPtq2MOl1FJeqdiJjg
        SzaqnQC4YGJWeiJZuRgmBAAh+QQFBwAYACwOABIAFQAGAAAFISAmjiSJGEFgIGVLoqnqznHMXDOGi3W6
        5yNYygAsnYasEAAh+QQFBwAYACwcABIABwAGAAAFFOBRCEJxYCNZYqratCTaFphImlgIADs=
</value>
  </data>
</root>